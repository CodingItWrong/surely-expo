{"version":3,"sources":["SwiperUtils.ts"],"names":["useLatest","React","addMonths","differenceInMonths","getRealIndex","startAtIndex","useYearChange","onChange","selectedYear","currentIndexRef","onChangeRef","useEffect","currentIndex","current","currentDate","Date","setFullYear","today","months","newIndex"],"mappings":"AACA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,SADF,EAEEC,kBAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,aALP;AAsBA,OAAO,SAASC,aAAT,CACLC,QADK,QASL;AAAA,MAPA;AACEC,IAAAA,YADF;AAEEC,IAAAA;AAFF,GAOA;AACA,QAAMC,WAAW,GAAGV,SAAS,CAACO,QAAD,CAA7B;AACAN,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,QAAIH,YAAJ,EAAkB;AAChB,YAAMI,YAAY,GAAGH,eAAe,CAACI,OAAhB,IAA2B,CAAhD;AACA,YAAMC,WAAW,GAAGZ,SAAS,CAAC,IAAIa,IAAJ,EAAD,EAAaX,YAAY,CAACQ,YAAD,CAAzB,CAA7B;AACAE,MAAAA,WAAW,CAACE,WAAZ,CAAwBR,YAAxB;AAEA,YAAMS,KAAK,GAAG,IAAIF,IAAJ,EAAd;AACA,YAAMG,MAAM,GAAGf,kBAAkB,CAACc,KAAD,EAAQH,WAAR,CAAjC;AAEA,YAAMK,QAAQ,GAAGd,YAAY,GAAGa,MAAhC;;AACA,UAAIN,YAAY,KAAKO,QAArB,EAA+B;AAC7BT,QAAAA,WAAW,CAACG,OAAZ,CAAoBM,QAApB;AACD;AACF;AACF,GAdD,EAcG,CAACV,eAAD,EAAkBC,WAAlB,EAA+BF,YAA/B,CAdH;AAeD","sourcesContent":["import type { MutableRefObject } from 'react'\nimport { useLatest } from '../utils'\nimport * as React from 'react'\nimport {\n  addMonths,\n  differenceInMonths,\n  getRealIndex,\n  startAtIndex,\n} from './dateUtils'\n\nexport type RenderProps = {\n  index: number\n  onNext: () => any\n  onPrev: () => any\n}\n\nexport type SwiperProps = {\n  initialIndex: number\n  scrollMode: 'horizontal' | 'vertical'\n  renderItem: (renderProps: RenderProps) => any\n  renderHeader?: (renderProps: RenderProps) => any\n  renderFooter?: (renderProps: RenderProps) => any\n  selectedYear: number | undefined\n}\n\nexport function useYearChange(\n  onChange: (index: number | undefined) => void,\n  {\n    selectedYear,\n    currentIndexRef,\n  }: {\n    currentIndexRef: MutableRefObject<number>\n    selectedYear: number | undefined\n  }\n) {\n  const onChangeRef = useLatest(onChange)\n  React.useEffect(() => {\n    if (selectedYear) {\n      const currentIndex = currentIndexRef.current || 0\n      const currentDate = addMonths(new Date(), getRealIndex(currentIndex))\n      currentDate.setFullYear(selectedYear)\n\n      const today = new Date()\n      const months = differenceInMonths(today, currentDate)\n\n      const newIndex = startAtIndex + months\n      if (currentIndex !== newIndex) {\n        onChangeRef.current(newIndex)\n      }\n    }\n  }, [currentIndexRef, onChangeRef, selectedYear])\n}\n"]}