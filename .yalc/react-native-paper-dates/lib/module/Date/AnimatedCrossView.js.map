{"version":3,"sources":["AnimatedCrossView.tsx"],"names":["React","Animated","StyleSheet","View","useTheme","AnimatedCrossView","collapsed","calendar","calendarEdit","theme","calendarOpacity","useRef","Value","useEffect","timing","current","toValue","duration","useNativeDriver","start","styles","root","opacity","transform","scaleY","interpolate","inputRange","outputRange","scaleX","backgroundColor","colors","surface","scale","create","flex","position","left","right"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, View } from 'react-native'\nimport { useTheme } from 'react-native-paper'\n\nexport default function AnimatedCrossView({\n  // visible,\n  collapsed,\n  calendar,\n  calendarEdit,\n}: {\n  calendar: any\n  calendarEdit: any\n  // visible: boolean\n  collapsed: boolean\n}) {\n  const theme = useTheme()\n  const calendarOpacity = React.useRef<Animated.Value>(\n    new Animated.Value(collapsed ? 1 : 0)\n  )\n  React.useEffect(() => {\n    // if (visible) {\n    Animated.timing(calendarOpacity.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true,\n    }).start()\n    // }\n  }, [collapsed])\n\n  return (\n    <View style={styles.root}>\n      <Animated.View\n        pointerEvents={collapsed ? 'auto' : 'none'}\n        style={[\n          styles.calendar,\n          {\n            opacity: calendarOpacity.current,\n            transform: [\n              {\n                scaleY: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.85, 1],\n                }),\n              },\n              {\n                scaleX: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.95, 1],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendar}\n      </Animated.View>\n      <Animated.View\n        pointerEvents={collapsed ? 'none' : 'auto'}\n        style={[\n          styles.calendarEdit,\n          {\n            backgroundColor: theme.colors.surface,\n            opacity: calendarOpacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n            transform: [\n              {\n                scale: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0.95],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendarEdit}\n      </Animated.View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { flex: 1 },\n  calendarEdit: {\n    position: 'absolute',\n\n    left: 0,\n    right: 0,\n  },\n  calendar: {\n    flex: 1,\n  },\n})\n"]}