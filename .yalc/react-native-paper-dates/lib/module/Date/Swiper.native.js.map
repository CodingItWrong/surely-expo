{"version":3,"sources":["Swiper.native.tsx"],"names":["React","ScrollView","StyleSheet","View","getHorizontalMonthOffset","getIndexFromVerticalOffset","getMonthHeight","getVerticalMonthsOffset","montHeaderHeight","useYearChange","beginOffset","estimatedMonthHeight","totalMonths","AutoSizer","styles","create","viewPager","flex","inner","position","getVisibleArray","i","isHorizontal","height","Swiper","props","width","SwiperInner","scrollMode","renderItem","renderHeader","renderFooter","selectedYear","initialIndex","idx","useRef","visibleIndexes","setVisibleIndexes","useState","parentRef","scrollTo","useCallback","index","animated","current","offset","y","x","onPrev","onNext","scrollToInitial","onMomentumScrollEnd","e","contentOffset","nativeEvent","viewSize","layoutMeasurement","newIndex","Math","floor","renderProps","currentIndexRef","Array","length","fill","undefined","map","_","vi","top","left","right","bottom","memo"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {\n  NativeScrollEvent,\n  NativeSyntheticEvent,\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native'\nimport {\n  getHorizontalMonthOffset,\n  getIndexFromVerticalOffset,\n  getMonthHeight,\n  getVerticalMonthsOffset,\n  montHeaderHeight,\n} from './Month'\n\nimport { SwiperProps, useYearChange } from './SwiperUtils'\nimport { beginOffset, estimatedMonthHeight, totalMonths } from './dateUtils'\nimport AutoSizer from './AutoSizer'\n\nconst styles = StyleSheet.create({\n  viewPager: {\n    flex: 1,\n  },\n  inner: {\n    position: 'relative',\n  },\n})\n\nfunction getVisibleArray(\n  i: number,\n  { isHorizontal, height }: { isHorizontal: boolean; height: number }\n) {\n  if (isHorizontal || height < 700) {\n    return [i - 1, i, i + 1]\n  }\n  return [i - 2, i - 1, i, i + 1, i + 2]\n}\n\nfunction Swiper(props: SwiperProps) {\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <SwiperInner {...props} width={width} height={height} />\n      )}\n    </AutoSizer>\n  )\n}\n\nfunction SwiperInner({\n  scrollMode,\n  renderItem,\n  renderHeader,\n  renderFooter,\n  selectedYear,\n  initialIndex,\n  width,\n  height,\n}: SwiperProps & { width: number; height: number }) {\n  const idx = React.useRef<number>(initialIndex)\n  const isHorizontal = scrollMode === 'horizontal'\n  const [visibleIndexes, setVisibleIndexes] = React.useState<number[]>(\n    getVisibleArray(initialIndex, { isHorizontal, height })\n  )\n\n  const parentRef = React.useRef<ScrollView | null>(null)\n\n  const scrollTo = React.useCallback(\n    (index: number, animated: boolean) => {\n      idx.current = index\n      setVisibleIndexes(getVisibleArray(index, { isHorizontal, height }))\n\n      if (!parentRef.current) {\n        return\n      }\n      const offset = isHorizontal\n        ? getHorizontalMonthOffset(index, width)\n        : getVerticalMonthsOffset(index) - montHeaderHeight\n\n      if (isHorizontal) {\n        parentRef.current.scrollTo({\n          y: 0,\n          x: offset,\n          animated,\n        })\n      } else {\n        parentRef.current.scrollTo({\n          y: offset,\n          x: 0,\n          animated,\n        })\n      }\n    },\n    [parentRef, isHorizontal, width, height]\n  )\n\n  const onPrev = React.useCallback(() => {\n    scrollTo(idx.current - 1, true)\n  }, [scrollTo, idx])\n\n  const onNext = React.useCallback(() => {\n    scrollTo(idx.current + 1, true)\n  }, [scrollTo, idx])\n\n  const scrollToInitial = React.useCallback(() => {\n    scrollTo(idx.current, false)\n  }, [scrollTo])\n\n  const onMomentumScrollEnd = React.useCallback(\n    (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n      const contentOffset = e.nativeEvent.contentOffset\n      const viewSize = e.nativeEvent.layoutMeasurement\n      const newIndex = isHorizontal\n        ? Math.floor(contentOffset.x / viewSize.width)\n        : getIndexFromVerticalOffset(contentOffset.y - beginOffset)\n\n      if (newIndex === 0) {\n        return\n      }\n\n      if (idx.current !== newIndex) {\n        idx.current = newIndex\n        setVisibleIndexes(getVisibleArray(newIndex, { isHorizontal, height }))\n      }\n    },\n    [idx, height, isHorizontal]\n  )\n\n  const renderProps = {\n    index: 0,\n    onPrev,\n    onNext,\n  }\n\n  useYearChange(\n    (newIndex) => {\n      if (newIndex) {\n        scrollTo(newIndex, false)\n      }\n    },\n    {\n      selectedYear,\n      currentIndexRef: idx,\n    }\n  )\n\n  return (\n    <>\n      <ScrollView\n        ref={parentRef}\n        horizontal={isHorizontal}\n        pagingEnabled={isHorizontal}\n        style={styles.viewPager}\n        onMomentumScrollEnd={onMomentumScrollEnd}\n        onScrollEndDrag={onMomentumScrollEnd}\n        onLayout={scrollToInitial}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        decelerationRate=\"fast\"\n        scrollEventThrottle={10}\n      >\n        <View\n          style={[\n            styles.inner,\n            {\n              height: isHorizontal\n                ? height\n                : estimatedMonthHeight * totalMonths,\n              width: isHorizontal ? width * totalMonths : width,\n            },\n          ]}\n        >\n          {visibleIndexes\n            ? new Array(visibleIndexes.length).fill(undefined).map((_, vi) => (\n                <View\n                  key={vi}\n                  style={{\n                    top: isHorizontal\n                      ? 0\n                      : getVerticalMonthsOffset(visibleIndexes[vi]),\n                    left: isHorizontal\n                      ? getHorizontalMonthOffset(visibleIndexes[vi], width)\n                      : 0,\n                    right: isHorizontal ? undefined : 0,\n                    bottom: isHorizontal ? 0 : undefined,\n                    position: 'absolute',\n                    width: isHorizontal ? width : undefined,\n                    height: isHorizontal\n                      ? undefined\n                      : getMonthHeight(scrollMode, visibleIndexes[vi]),\n                  }}\n                >\n                  {renderItem({\n                    index: visibleIndexes[vi],\n                    onPrev: onPrev,\n                    onNext: onNext,\n                  })}\n                </View>\n              ))\n            : null}\n        </View>\n      </ScrollView>\n      {renderHeader && renderHeader(renderProps)}\n      {renderFooter && renderFooter(renderProps)}\n    </>\n  )\n}\n\nexport default React.memo(Swiper)\n"]}