{"version":3,"sources":["CalendarHeader.tsx"],"names":["React","StyleSheet","View","IconButton","useTheme","DayNames","dayNamesHeight","getTranslation","buttonContainerHeight","buttonContainerMarginTop","buttonContainerMarginBottom","getCalendarHeaderHeight","scrollMode","CalendarHeader","onPrev","onNext","disableWeekDays","locale","theme","isHorizontal","styles","datePickerHeader","buttonContainer","spacer","buttonWrapper","backgroundColor","colors","surface","undefined","create","position","top","right","left","zIndex","height","marginTop","marginBottom","flexDirection","alignItems","flex","memo"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport DayNames, { dayNamesHeight } from './DayNames'\nimport type { DisableWeekDaysType } from './dateUtils'\nimport { getTranslation } from '../translations/utils'\n\nconst buttonContainerHeight = 56\nconst buttonContainerMarginTop = 4\nconst buttonContainerMarginBottom = 8\n\nexport function getCalendarHeaderHeight(scrollMode: 'horizontal' | 'vertical') {\n  if (scrollMode === 'horizontal') {\n    return (\n      buttonContainerHeight +\n      buttonContainerMarginTop +\n      buttonContainerMarginBottom +\n      dayNamesHeight\n    )\n  }\n  return dayNamesHeight\n}\n\nfunction CalendarHeader({\n  scrollMode,\n  onPrev,\n  onNext,\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  onPrev: () => any\n  onNext: () => any\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const isHorizontal = scrollMode === 'horizontal'\n  return (\n    <View style={styles.datePickerHeader} pointerEvents={'box-none'}>\n      {isHorizontal ? (\n        <View style={styles.buttonContainer} pointerEvents={'box-none'}>\n          <View style={styles.spacer} pointerEvents={'box-none'} />\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-left\"\n              accessibilityLabel={getTranslation(locale, 'previous')}\n              onPress={onPrev}\n              // RN types bug\n              hasTVPreferredFocus={undefined}\n              tvParallaxProperties={undefined}\n            />\n          </View>\n\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-right\"\n              accessibilityLabel={getTranslation(locale, 'next')}\n              onPress={onNext}\n              // RN types bug\n              hasTVPreferredFocus={undefined}\n              tvParallaxProperties={undefined}\n            />\n          </View>\n        </View>\n      ) : null}\n      <DayNames disableWeekDays={disableWeekDays} locale={locale} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10,\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonWrapper: {},\n  spacer: { flex: 1 },\n})\n\nexport default React.memo(CalendarHeader)\n"]}