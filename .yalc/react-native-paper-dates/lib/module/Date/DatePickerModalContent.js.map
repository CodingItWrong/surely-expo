{"version":3,"sources":["DatePickerModalContent.tsx"],"names":["React","Calendar","AnimatedCrossView","DatePickerModalHeader","DatePickerModalContentHeader","CalendarEdit","DatePickerModalHeaderBackground","DatePickerModalContent","props","mode","onChange","onConfirm","onDismiss","disableSafeTop","disableWeekDays","locale","validRange","dateMode","anyProps","state","setState","useState","date","startDate","endDate","dates","useEffect","collapsed","setCollapsed","onInnerChange","useCallback","params","prev","onInnerConfirm","onToggleCollapse","saveLabel","headerSeparator","emptyLabel","label","moreLabel","startLabel","endLabel","memo"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport Calendar, {\n  BaseCalendarProps,\n  CalendarDate,\n  CalendarDates,\n  MultiChange,\n  MultiConfirm,\n  RangeChange,\n  SingleChange,\n} from './Calendar'\n\nimport AnimatedCrossView from './AnimatedCrossView'\n\nimport DatePickerModalHeader from './DatePickerModalHeader'\nimport DatePickerModalContentHeader, {\n  HeaderPickProps,\n} from './DatePickerModalContentHeader'\nimport CalendarEdit from './CalendarEdit'\nimport DatePickerModalHeaderBackground from './DatePickerModalHeaderBackground'\n\nexport type LocalState = {\n  startDate: CalendarDate\n  endDate: CalendarDate\n  date: CalendarDate\n  dates: CalendarDates\n}\n\ninterface DatePickerModalContentBaseProps {\n  inputFormat?: string\n  locale: string\n  onDismiss: () => any\n  disableSafeTop?: boolean\n}\n\nexport interface DatePickerModalContentRangeProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n  onChange?: RangeChange\n  onConfirm: RangeChange\n}\n\nexport interface DatePickerModalContentSingleProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'single'\n  date?: CalendarDate\n  onChange?: SingleChange\n  onConfirm: SingleChange\n  dateMode?: 'start' | 'end'\n}\n\nexport interface DatePickerModalContentMultiProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'multiple'\n  dates?: CalendarDates\n  onChange?: MultiChange\n  onConfirm: MultiConfirm\n}\n\nexport function DatePickerModalContent(\n  props:\n    | DatePickerModalContentRangeProps\n    | DatePickerModalContentSingleProps\n    | DatePickerModalContentMultiProps\n) {\n  const {\n    mode,\n    onChange,\n    onConfirm,\n    onDismiss,\n    disableSafeTop,\n    disableWeekDays,\n    locale,\n    validRange,\n    dateMode,\n  } = props\n\n  const anyProps = props as any\n\n  // use local state to add only onConfirm state changes\n  const [state, setState] = React.useState<LocalState>({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    dates: anyProps.dates,\n  })\n\n  // update local state if changed from outside or if modal is opened\n  React.useEffect(() => {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      dates: anyProps.dates,\n    })\n  }, [anyProps.date, anyProps.startDate, anyProps.endDate, anyProps.dates])\n\n  const [collapsed, setCollapsed] = React.useState<boolean>(true)\n\n  const onInnerChange = React.useCallback(\n    (params) => {\n      onChange && onChange(params)\n      setState((prev) => ({ ...prev, ...params }))\n    },\n    [onChange, setState]\n  )\n\n  const onInnerConfirm = React.useCallback(() => {\n    if (mode === 'single') {\n      ;(onConfirm as DatePickerModalContentSingleProps['onConfirm'])({\n        date: state.date,\n      })\n    } else if (mode === 'range') {\n      ;(onConfirm as DatePickerModalContentRangeProps['onConfirm'])({\n        startDate: state.startDate,\n        endDate: state.endDate,\n      })\n    } else if (mode === 'multiple') {\n      ;(onConfirm as DatePickerModalContentMultiProps['onConfirm'])({\n        dates: state.dates || [],\n      })\n    }\n  }, [state, mode, onConfirm])\n\n  const onToggleCollapse = React.useCallback(() => {\n    setCollapsed((prev) => !prev)\n  }, [setCollapsed])\n\n  return (\n    <>\n      <DatePickerModalHeaderBackground>\n        <DatePickerModalHeader\n          locale={locale}\n          onSave={onInnerConfirm}\n          onDismiss={onDismiss}\n          saveLabel={props.saveLabel}\n          disableSafeTop={disableSafeTop}\n        />\n        <DatePickerModalContentHeader\n          state={state}\n          mode={mode}\n          collapsed={collapsed}\n          onToggle={onToggleCollapse}\n          headerSeparator={props.headerSeparator}\n          emptyLabel={props.emptyLabel}\n          label={props.label}\n          moreLabel={props.moreLabel}\n          startLabel={props.startLabel}\n          endLabel={props.endLabel}\n          locale={locale}\n        />\n      </DatePickerModalHeaderBackground>\n\n      <AnimatedCrossView\n        collapsed={collapsed}\n        calendar={\n          <Calendar\n            locale={locale}\n            mode={mode}\n            startDate={state.startDate}\n            endDate={state.endDate}\n            date={state.date}\n            onChange={onInnerChange}\n            disableWeekDays={disableWeekDays}\n            dates={state.dates}\n            validRange={validRange}\n            dateMode={dateMode}\n          />\n        }\n        calendarEdit={\n          <CalendarEdit\n            mode={mode}\n            state={state}\n            label={props.label}\n            startLabel={props.startLabel}\n            endLabel={props.endLabel}\n            collapsed={collapsed}\n            onChange={onInnerChange}\n            validRange={validRange}\n            locale={locale}\n          />\n        }\n      />\n    </>\n  )\n}\n\nexport default React.memo(DatePickerModalContent)\n"]}