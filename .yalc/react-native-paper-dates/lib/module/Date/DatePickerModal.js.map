{"version":3,"sources":["DatePickerModal.tsx"],"names":["React","Modal","StyleSheet","TouchableWithoutFeedback","useWindowDimensions","View","Platform","StatusBar","useTheme","DatePickerModalContent","useHeaderBackgroundColor","useHeaderColorIsLight","DatePickerModal","props","theme","dimensions","visible","animationType","disableStatusBar","disableStatusBarPadding","rest","animationTypeCalculated","select","web","default","isLight","headerBackgroundColor","absoluteFill","onDismiss","supportedOrientations","styles","modalBackground","backgroundColor","colors","backdrop","modalRoot","modalContent","surface","width","modalContentBig","height","currentHeight","create","justifyContent","alignItems","flex","maxWidth","maxHeight","borderRadius","overflow","memo"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {\n  Modal,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  useWindowDimensions,\n  View,\n  Platform,\n  StatusBar,\n} from 'react-native'\n\nimport { useTheme } from 'react-native-paper'\nimport DatePickerModalContent, {\n  DatePickerModalContentMultiProps,\n  DatePickerModalContentRangeProps,\n  DatePickerModalContentSingleProps,\n} from './DatePickerModalContent'\nimport { useHeaderBackgroundColor, useHeaderColorIsLight } from '../utils'\n\ninterface DatePickerModalProps {\n  visible: boolean\n  animationType?: 'slide' | 'fade' | 'none'\n  disableStatusBar?: boolean\n  disableStatusBarPadding?: boolean\n}\n\nexport interface DatePickerModalSingleProps\n  extends DatePickerModalContentSingleProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalMultiProps\n  extends DatePickerModalContentMultiProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalRangeProps\n  extends DatePickerModalContentRangeProps,\n    DatePickerModalProps {}\n\nexport function DatePickerModal(\n  props:\n    | DatePickerModalRangeProps\n    | DatePickerModalSingleProps\n    | DatePickerModalMultiProps\n) {\n  const theme = useTheme()\n  const dimensions = useWindowDimensions()\n  const {\n    visible,\n    animationType,\n    disableStatusBar,\n    disableStatusBarPadding,\n    ...rest\n  } = props\n  const animationTypeCalculated =\n    animationType ||\n    Platform.select({\n      web: 'none',\n      default: 'slide',\n    })\n\n  const isLight = useHeaderColorIsLight()\n  const headerBackgroundColor = useHeaderBackgroundColor()\n\n  return (\n    <View style={[StyleSheet.absoluteFill]} pointerEvents=\"box-none\">\n      <Modal\n        animationType={animationTypeCalculated}\n        transparent={true}\n        visible={visible}\n        onRequestClose={rest.onDismiss}\n        presentationStyle=\"overFullScreen\"\n        supportedOrientations={supportedOrientations}\n        //@ts-ignore\n        statusBarTranslucent={true}\n      >\n        <>\n          <TouchableWithoutFeedback onPress={rest.onDismiss}>\n            <View\n              style={[\n                StyleSheet.absoluteFill,\n                styles.modalBackground,\n                { backgroundColor: theme.colors.backdrop },\n              ]}\n            />\n          </TouchableWithoutFeedback>\n          <View\n            style={[StyleSheet.absoluteFill, styles.modalRoot]}\n            pointerEvents=\"box-none\"\n          >\n            <View\n              style={[\n                styles.modalContent,\n                { backgroundColor: theme.colors.surface },\n                dimensions.width > 650 ? styles.modalContentBig : null,\n              ]}\n            >\n              {disableStatusBar ? null : (\n                <StatusBar\n                  translucent={true}\n                  barStyle={isLight ? 'dark-content' : 'light-content'}\n                />\n              )}\n              {disableStatusBarPadding ? null : (\n                <View\n                  style={[\n                    {\n                      height: StatusBar.currentHeight,\n                      backgroundColor: headerBackgroundColor,\n                    },\n                  ]}\n                />\n              )}\n              <DatePickerModalContent\n                {...rest}\n                disableSafeTop={disableStatusBar}\n              />\n            </View>\n          </View>\n        </>\n      </Modal>\n    </View>\n  )\n}\nconst supportedOrientations: any = [\n  'portrait',\n  'portrait-upside-down',\n  'landscape',\n  'landscape-left',\n  'landscape-right',\n]\n\nconst styles = StyleSheet.create({\n  modalRoot: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n  },\n  modalBackground: {\n    flex: 1,\n  },\n  modalContent: {\n    flex: 1,\n    width: '100%',\n  },\n  modalContentBig: {\n    maxWidth: 600,\n    maxHeight: 800,\n    borderRadius: 10,\n    width: '100%',\n    overflow: 'hidden',\n  },\n})\n\nexport default React.memo(DatePickerModal)\n"]}