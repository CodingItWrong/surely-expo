{"version":3,"sources":["DatePickerModalHeader.tsx"],"names":["React","Animated","StyleSheet","SafeAreaView","Appbar","Button","useHeaderTextColor","getTranslation","DatePickerModalHeader","props","disableSafeTop","locale","saveLabel","color","styles","animated","safeContent","safeContentNoTop","appbarHeader","onDismiss","undefined","onSave","create","fill","flex","paddingBottom","elevation","paddingTop","header","height","alignItems","flexDirection","paddingLeft","paddingRight","headerContentContainer","marginTop","label","letterSpacing","fontSize","singleHeaderText","rangeHeaderText","headerTextFilled","headerTextEmpty","headerSeparator","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, SafeAreaView } from 'react-native'\nimport { Appbar, Button } from 'react-native-paper'\n\nimport { useHeaderTextColor } from '../utils'\nimport { getTranslation } from '../translations/utils'\n\nexport interface DatePickerModalHeaderProps {\n  disableSafeTop?: boolean\n  saveLabel?: string\n  onDismiss: () => void\n  onSave: () => void\n  locale: string | undefined\n}\n\nexport default function DatePickerModalHeader(\n  props: DatePickerModalHeaderProps\n) {\n  const { disableSafeTop, locale } = props\n  const saveLabel = props.saveLabel || getTranslation(locale, 'save')\n  const color = useHeaderTextColor()\n  return (\n    <>\n      <Animated.View style={styles.animated}>\n        <SafeAreaView\n          style={[\n            styles.safeContent,\n            disableSafeTop && styles.safeContentNoTop,\n          ]}\n        >\n          <Appbar style={styles.appbarHeader}>\n            <Appbar.Action\n              icon=\"close\"\n              accessibilityLabel={getTranslation(locale, 'close')}\n              onPress={props.onDismiss}\n              color={color}\n              testID=\"react-native-paper-dates-close\"\n              // RN types bug\n              hasTVPreferredFocus={undefined}\n              tvParallaxProperties={undefined}\n            />\n            <Appbar.Content title={''} />\n            <Button\n              color={color}\n              onPress={props.onSave}\n              testID=\"react-native-paper-dates-save\"\n            >\n              {saveLabel}\n            </Button>\n          </Appbar>\n        </SafeAreaView>\n      </Animated.View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  safeContentNoTop: {\n    paddingTop: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  headerTextFilled: { color: 'rgba(255,255,255,1)' },\n  headerTextEmpty: { color: 'rgba(255,255,255,0.5)' },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n    backgroundColor: 'transparent',\n    // alignItems:'center'\n  },\n})\n"]}