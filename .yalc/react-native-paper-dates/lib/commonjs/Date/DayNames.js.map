{"version":3,"sources":["DayNames.tsx"],"names":["dayNamesHeight","weekdays","Date","DayNames","disableWeekDays","locale","theme","shortDayNames","React","useMemo","formatter","Intl","DateTimeFormat","weekday","map","date","format","styles","dayNames","backgroundColor","colors","surface","filter","_","dayIndex","dayName","i","StyleSheet","create","height","flexDirection","alignItems","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEO,MAAMA,cAAc,GAAG,EAAvB,C,CAEP;;;AACA,MAAMC,QAAQ,GAAG,CACf,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CADe,EAEf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFe,EAGf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAHe,EAIf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAJe,EAKf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALe,EAMf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CANe,EAOf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAPe,CAAjB;;AAUA,SAASC,QAAT,OAMG;AAAA,MANe;AAChBC,IAAAA,eADgB;AAEhBC,IAAAA;AAFgB,GAMf;AACD,QAAMC,KAAK,GAAG,iCAAd;AACA,QAAMC,aAAa,GAAGC,KAAK,CAACC,OAAN,CAAwB,MAAM;AAClD,UAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwBP,MAAxB,EAAgC;AAChDQ,MAAAA,OAAO,EAAE;AADuC,KAAhC,CAAlB;AAGA,WAAOZ,QAAQ,CAACa,GAAT,CAAcC,IAAD,IAAUL,SAAS,CAACM,MAAV,CAAiBD,IAAjB,CAAvB,CAAP;AACD,GALqB,EAKnB,CAACV,MAAD,CALmB,CAAtB;AAOA,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAACY,MAAM,CAACC,QAAR,EAAkB;AAAEC,MAAAA,eAAe,EAAEb,KAAK,CAACc,MAAN,CAAaC;AAAhC,KAAlB,CADT;AAEE,IAAA,aAAa,EAAE;AAFjB,KAIGd,aAAa,CACXe,MADF,CACS,CAACC,CAAD,EAAIC,QAAJ,KAAiB,4BAAYA,QAAZ,EAAsBpB,eAAtB,CAD1B,EAEEU,GAFF,CAEM,CAACW,OAAD,EAAUC,CAAV,kBACH,oBAAC,gBAAD;AAAS,IAAA,GAAG,EAAG,GAAED,OAAQ,IAAGC,CAAE,EAA9B;AAAiC,IAAA,KAAK,EAAED;AAAxC,IAHH,CAJH,CADF;AAYD;;AACD,MAAMR,MAAM,GAAGU,wBAAWC,MAAX,CAAkB;AAC/BV,EAAAA,QAAQ,EAAE;AACRW,IAAAA,MAAM,EAAE7B,cADA;AAER8B,IAAAA,aAAa,EAAE,KAFP;AAGRC,IAAAA,UAAU,EAAE,QAHJ;AAIRZ,IAAAA,eAAe,EAAE;AAJT;AADqB,CAAlB,CAAf;;4BAQeX,KAAK,CAACwB,IAAN,CAAW7B,QAAX,C","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport DayName from './DayName'\nimport { useTheme } from 'react-native-paper'\nimport { DisableWeekDaysType, showWeekDay } from './dateUtils'\n\nexport const dayNamesHeight = 44\n\n// TODO: wait for a better Intl api ;-)\nconst weekdays = [\n  new Date(2020, 7, 2),\n  new Date(2020, 7, 3),\n  new Date(2020, 7, 4),\n  new Date(2020, 7, 5),\n  new Date(2020, 7, 6),\n  new Date(2020, 7, 7),\n  new Date(2020, 7, 8),\n]\n\nfunction DayNames({\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const shortDayNames = React.useMemo<string[]>(() => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow',\n    })\n    return weekdays.map((date) => formatter.format(date))\n  }, [locale])\n\n  return (\n    <View\n      style={[styles.dayNames, { backgroundColor: theme.colors.surface }]}\n      pointerEvents={'none'}\n    >\n      {shortDayNames\n        .filter((_, dayIndex) => showWeekDay(dayIndex, disableWeekDays))\n        .map((dayName, i) => (\n          <DayName key={`${dayName}_${i}`} label={dayName} />\n        ))}\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n})\nexport default React.memo(DayNames)\n"]}