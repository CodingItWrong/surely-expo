{"version":3,"sources":["SwiperUtils.ts"],"names":["useYearChange","onChange","selectedYear","currentIndexRef","onChangeRef","React","useEffect","currentIndex","current","currentDate","Date","setFullYear","today","months","newIndex","startAtIndex"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;;;AAsBO,SAASA,aAAT,CACLC,QADK,QASL;AAAA,MAPA;AACEC,IAAAA,YADF;AAEEC,IAAAA;AAFF,GAOA;AACA,QAAMC,WAAW,GAAG,sBAAUH,QAAV,CAApB;AACAI,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpB,QAAIJ,YAAJ,EAAkB;AAChB,YAAMK,YAAY,GAAGJ,eAAe,CAACK,OAAhB,IAA2B,CAAhD;AACA,YAAMC,WAAW,GAAG,0BAAU,IAAIC,IAAJ,EAAV,EAAsB,6BAAaH,YAAb,CAAtB,CAApB;AACAE,MAAAA,WAAW,CAACE,WAAZ,CAAwBT,YAAxB;AAEA,YAAMU,KAAK,GAAG,IAAIF,IAAJ,EAAd;AACA,YAAMG,MAAM,GAAG,mCAAmBD,KAAnB,EAA0BH,WAA1B,CAAf;AAEA,YAAMK,QAAQ,GAAGC,0BAAeF,MAAhC;;AACA,UAAIN,YAAY,KAAKO,QAArB,EAA+B;AAC7BV,QAAAA,WAAW,CAACI,OAAZ,CAAoBM,QAApB;AACD;AACF;AACF,GAdD,EAcG,CAACX,eAAD,EAAkBC,WAAlB,EAA+BF,YAA/B,CAdH;AAeD","sourcesContent":["import type { MutableRefObject } from 'react'\nimport { useLatest } from '../utils'\nimport * as React from 'react'\nimport {\n  addMonths,\n  differenceInMonths,\n  getRealIndex,\n  startAtIndex,\n} from './dateUtils'\n\nexport type RenderProps = {\n  index: number\n  onNext: () => any\n  onPrev: () => any\n}\n\nexport type SwiperProps = {\n  initialIndex: number\n  scrollMode: 'horizontal' | 'vertical'\n  renderItem: (renderProps: RenderProps) => any\n  renderHeader?: (renderProps: RenderProps) => any\n  renderFooter?: (renderProps: RenderProps) => any\n  selectedYear: number | undefined\n}\n\nexport function useYearChange(\n  onChange: (index: number | undefined) => void,\n  {\n    selectedYear,\n    currentIndexRef,\n  }: {\n    currentIndexRef: MutableRefObject<number>\n    selectedYear: number | undefined\n  }\n) {\n  const onChangeRef = useLatest(onChange)\n  React.useEffect(() => {\n    if (selectedYear) {\n      const currentIndex = currentIndexRef.current || 0\n      const currentDate = addMonths(new Date(), getRealIndex(currentIndex))\n      currentDate.setFullYear(selectedYear)\n\n      const today = new Date()\n      const months = differenceInMonths(today, currentDate)\n\n      const newIndex = startAtIndex + months\n      if (currentIndex !== newIndex) {\n        onChangeRef.current(newIndex)\n      }\n    }\n  }, [currentIndexRef, onChangeRef, selectedYear])\n}\n"]}