{"version":3,"sources":["YearPicker.tsx"],"names":["ITEM_HEIGHT","startYear","endYear","years","YearPicker","selectedYear","selectingYear","onPressYear","theme","flatList","React","useRef","useEffect","current","indexToGo","scrollToOffset","offset","animated","StyleSheet","absoluteFill","styles","root","backgroundColor","colors","surface","opacity1","opacity0","list","item","YearPure","year","selected","String","yearButton","undefined","yearInner","primary","yearLabel","Year","memo","create","flex","top","zIndex","marginLeft","marginRight","height","justifyContent","color","borderRadius","overflow","alignItems","fontSize","opacity"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { FlatList, StyleSheet, View } from 'react-native'\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper'\nimport { range } from '../utils'\n\nconst ITEM_HEIGHT = 62\n\nconst startYear = 1800\nconst endYear = 2200\nconst years = range(startYear, endYear)\n\nexport default function YearPicker({\n  selectedYear,\n  selectingYear,\n  onPressYear,\n}: {\n  selectedYear: number | undefined\n  selectingYear: boolean\n  onPressYear: (year: number) => any\n}) {\n  const theme = useTheme()\n  const flatList = React.useRef<FlatList<number> | null>(null)\n\n  // scroll to selected year\n  React.useEffect(() => {\n    if (flatList.current && selectedYear) {\n      const indexToGo = selectedYear - startYear\n      flatList.current.scrollToOffset({\n        offset: (indexToGo / 3) * ITEM_HEIGHT - ITEM_HEIGHT,\n        animated: false,\n      })\n    }\n  }, [flatList, selectedYear])\n\n  return (\n    <View\n      style={[\n        StyleSheet.absoluteFill,\n        styles.root,\n        { backgroundColor: theme.colors.surface },\n        selectingYear ? styles.opacity1 : styles.opacity0,\n      ]}\n      pointerEvents={selectingYear ? 'auto' : 'none'}\n    >\n      <FlatList<number>\n        ref={flatList}\n        style={styles.list}\n        data={years}\n        renderItem={({ item }) => (\n          <Year\n            year={item}\n            selected={selectedYear === item}\n            onPressYear={onPressYear}\n          />\n        )}\n        keyExtractor={(item) => `${item}`}\n        numColumns={3}\n      />\n    </View>\n  )\n}\n\nfunction YearPure({\n  year,\n  selected,\n  onPressYear,\n}: {\n  year: number\n  selected: boolean\n  onPressYear: (newYear: number) => any\n}) {\n  const theme = useTheme()\n  return (\n    <View style={styles.year}>\n      <TouchableRipple\n        onPress={() => onPressYear(year)}\n        accessibilityRole=\"button\"\n        accessibilityLabel={String(year)}\n        style={styles.yearButton}\n        // RN types bug\n        hasTVPreferredFocus={undefined}\n        tvParallaxProperties={undefined}\n      >\n        <View\n          style={[\n            styles.yearInner,\n            selected ? { backgroundColor: theme.colors.primary } : null,\n          ]}\n        >\n          <Text\n            style={[styles.yearLabel, selected ? styles.selectedYear : null]}\n            selectable={false}\n          >\n            {year}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  )\n}\nconst Year = React.memo(YearPure)\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    top: 56,\n    zIndex: 100,\n  },\n\n  list: {\n    flex: 1,\n  },\n  year: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 16,\n    height: ITEM_HEIGHT,\n    justifyContent: 'center',\n  },\n  selectedYear: { color: '#fff' },\n  yearButton: {\n    borderRadius: 46 / 2,\n    overflow: 'hidden',\n  },\n  yearInner: {\n    borderRadius: 46 / 2,\n    height: 46,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  yearLabel: {\n    fontSize: 16,\n  },\n  opacity0: {\n    opacity: 0,\n  },\n  opacity1: {\n    opacity: 1,\n  },\n})\n"]}