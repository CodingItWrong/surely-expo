{"version":3,"sources":["Swiper.tsx"],"names":["Swiper","scrollMode","renderItem","renderHeader","renderFooter","selectedYear","initialIndex","isHorizontal","index","setIndex","React","useState","onPrev","useCallback","prev","onNext","renderProps","indexRef","newIndex","currentIndexRef","styles","flex1","width","height","estimatedMonthHeight","visibleArray","i","VerticalScroller","estimatedHeight","idx","useRef","visibleIndexes","setVisibleIndexes","parentRef","useIsomorphicLayoutEffect","element","current","top","montHeaderHeight","scrollTo","setVisibleIndexesThrottled","useDebouncedCallback","onScroll","e","currentTarget","scrollTop","offset","beginOffset","overflow","totalMonths","position","map","vi","willChange","transform","left","right","empty","StyleSheet","create","flex","callback","mounted","latest","timerId","useEffect","window","cancelAnimationFrame","args","requestAnimationFrame","useLayoutEffect","memo"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\n\nimport {\n  getIndexFromVerticalOffset,\n  getMonthHeight,\n  getVerticalMonthsOffset,\n  montHeaderHeight,\n} from './Month'\n\nimport { beginOffset, estimatedMonthHeight, totalMonths } from './dateUtils'\nimport { useLatest } from '../utils'\nimport { RenderProps, SwiperProps, useYearChange } from './SwiperUtils'\nimport AutoSizer from './AutoSizer'\n\nfunction Swiper({\n  scrollMode,\n  renderItem,\n  renderHeader,\n  renderFooter,\n  selectedYear,\n  initialIndex,\n}: SwiperProps) {\n  const isHorizontal = scrollMode === 'horizontal'\n  const [index, setIndex] = React.useState(initialIndex)\n\n  const onPrev = React.useCallback(() => {\n    setIndex((prev) => prev - 1)\n  }, [setIndex])\n\n  const onNext = React.useCallback(() => {\n    setIndex((prev) => prev + 1)\n  }, [setIndex])\n\n  const renderProps = {\n    index,\n    onPrev,\n    onNext,\n  }\n  const indexRef = useLatest(index)\n  useYearChange(\n    (newIndex) => {\n      if (newIndex) {\n        setIndex(newIndex)\n      }\n    },\n    {\n      selectedYear,\n      currentIndexRef: indexRef,\n    }\n  )\n\n  return (\n    <>\n      {renderHeader && renderHeader(renderProps)}\n      {isHorizontal ? (\n        <View style={styles.flex1}>\n          {renderItem({ index, onPrev, onNext })}\n        </View>\n      ) : (\n        <AutoSizer>\n          {({ width, height }) => (\n            <VerticalScroller\n              width={width}\n              height={height}\n              initialIndex={initialIndex}\n              estimatedHeight={estimatedMonthHeight}\n              renderItem={renderItem}\n            />\n          )}\n        </AutoSizer>\n      )}\n      {renderFooter && renderFooter(renderProps)}\n    </>\n  )\n}\n\nconst visibleArray = (i: number) => [i - 2, i - 1, i, i + 1, i + 2]\n\nfunction VerticalScroller({\n  width,\n  height,\n  initialIndex,\n  estimatedHeight,\n  renderItem,\n}: {\n  renderItem: (renderProps: RenderProps) => any\n  width: number\n  height: number\n  initialIndex: number\n  estimatedHeight: number\n}) {\n  const idx = React.useRef<number>(initialIndex)\n  const [visibleIndexes, setVisibleIndexes] = React.useState<number[]>(\n    visibleArray(initialIndex)\n  )\n  // eslint-disable-next-line no-undef\n  const parentRef = React.useRef<HTMLDivElement | null>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    const element = parentRef.current\n    if (!element) {\n      return\n    }\n    const top = getVerticalMonthsOffset(idx.current) - montHeaderHeight\n\n    element.scrollTo({\n      top,\n    })\n  }, [parentRef, idx])\n\n  const setVisibleIndexesThrottled = useDebouncedCallback(setVisibleIndexes)\n\n  const onScroll = React.useCallback(\n    (e: React.UIEvent) => {\n      const top = e.currentTarget.scrollTop\n      if (top === 0) {\n        return\n      }\n\n      const offset = top - beginOffset\n      const index = getIndexFromVerticalOffset(offset)\n\n      if (idx.current !== index) {\n        idx.current = index\n        setVisibleIndexesThrottled(visibleArray(index))\n      }\n    },\n    [setVisibleIndexesThrottled]\n  )\n\n  return (\n    <div\n      ref={parentRef}\n      style={{\n        height,\n        width,\n        overflow: 'auto',\n      }}\n      onScroll={onScroll}\n    >\n      <div\n        style={{\n          height: estimatedHeight * totalMonths,\n          position: 'relative',\n        }}\n      >\n        {[0, 1, 2, 3, 4].map((vi) => (\n          <div\n            key={vi}\n            style={{\n              willChange: 'transform',\n              transform: `translateY(${getVerticalMonthsOffset(\n                visibleIndexes[vi]\n              )}px)`,\n              left: 0,\n              right: 0,\n              position: 'absolute',\n              height: getMonthHeight('vertical', visibleIndexes[vi]),\n              // transform: `translateY(${getMonthsOffset('vertical', vi)}px)`,\n            }}\n          >\n            {renderItem({\n              index: visibleIndexes[vi],\n              onPrev: empty,\n              onNext: empty,\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst empty = () => null\n\nconst styles = StyleSheet.create({\n  flex1: {\n    flex: 1,\n  },\n})\n\nexport function useDebouncedCallback(callback: any): any {\n  const mounted = React.useRef<boolean>(true)\n  const latest = useLatest(callback)\n  const timerId = React.useRef<any>(null)\n\n  React.useEffect(() => {\n    return () => {\n      mounted.current = false\n      if (timerId.current) {\n        window.cancelAnimationFrame(timerId.current)\n      }\n    }\n  }, [mounted, timerId])\n\n  return React.useCallback(\n    (args: any) => {\n      if (timerId.current) {\n        window.cancelAnimationFrame(timerId.current)\n      }\n      timerId.current = window.requestAnimationFrame(function () {\n        if (mounted.current) {\n          latest.current(args)\n        }\n      })\n    },\n    [mounted, timerId, latest]\n  )\n}\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport default React.memo(Swiper)\n"]}